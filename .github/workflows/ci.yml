name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  init:
    runs-on: windows-2022
    steps:
      - run: echo "Set global variables"
    outputs:
      dotnet-version: 9.0.106
      solution: Rad.LogViewer.sln
      app-project: src/Rad.LogViewer.App/Rad.LogViewer.App.csproj
      test-project: tests/Rad.LogViewer.Tests/Rad.LogViewer.Tests.csproj

  test:
    needs: [init]
    strategy:
      matrix:
        os: [windows-2022, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.init.outputs.dotnet-version }}
          
      - name: Restore dependencies
        run: dotnet restore ${{ needs.init.outputs.solution }}
        
      - name: Build
        run: dotnet build ${{ needs.init.outputs.solution }} --no-restore --configuration Release
        
      - name: Test
        run: dotnet test ${{ needs.init.outputs.test-project }} --no-build --configuration Release --verbosity normal

  release:
    if: github.event_name == 'workflow_dispatch'
    needs: [init, test]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.init.outputs.dotnet-version }}
          
      - name: Publish Windows
        run: dotnet publish ${{ needs.init.outputs.app-project }} --configuration Release --runtime win-x64 --self-contained true --output ./publish/win-x64
        
      - name: Publish Linux
        run: dotnet publish ${{ needs.init.outputs.app-project }} --configuration Release --runtime linux-x64 --self-contained true --output ./publish/linux-x64
        
      - name: Create archives
        run: |
          cd publish
          zip -r ../rad-log-viewer-${{ github.event.inputs.version }}-win-x64.zip win-x64/
          tar -czf ../rad-log-viewer-${{ github.event.inputs.version }}-linux-x64.tar.gz linux-x64/
          
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
        id: create_release
        
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rad-log-viewer-${{ github.event.inputs.version }}-win-x64.zip
          asset_name: rad-log-viewer-${{ github.event.inputs.version }}-win-x64.zip
          asset_content_type: application/zip
          
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rad-log-viewer-${{ github.event.inputs.version }}-linux-x64.tar.gz
          asset_name: rad-log-viewer-${{ github.event.inputs.version }}-linux-x64.tar.gz
          asset_content_type: application/gzip
