name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.0.0)"
        required: true
        type: string

jobs:
  init:
    runs-on: windows-2022
    steps:
      - run: echo "Set global variables"
    outputs:
      dotnet-version: 9.0.302
      solution: Rad.LogViewer.sln
      app-project: src/Rad.LogViewer.App/Rad.LogViewer.App.csproj
      test-project: tests/Rad.LogViewer.Tests/Rad.LogViewer.Tests.csproj

  test:
    needs: [init]
    strategy:
      matrix:
        os: [windows-2022, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.init.outputs.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore ${{ needs.init.outputs.solution }}

      - name: Build
        run: dotnet build ${{ needs.init.outputs.solution }} --no-restore --configuration Release

      - name: Test
        run: dotnet test ${{ needs.init.outputs.test-project }} --no-build --configuration Release --verbosity normal

  release:
    if: github.event_name == 'workflow_dispatch'
    needs: [init, test]
    permissions:
      contents: write # permission to allow creation of a release

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.init.outputs.dotnet-version }}

      - name: Extract version number
        id: version
        run: |
          ver="${{ github.event.inputs.version }}"
          if [[ "$ver" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "number=${ver#v}" >> $GITHUB_OUTPUT
          else
            echo "Input must start with 'v' followed by semver like v1.2.3" >&2
            exit 1
          fi

      - name: Publish Windows
        run: dotnet publish ${{ needs.init.outputs.app-project }} --configuration Release --runtime win-x64 --self-contained true --output ./publish/win-x64 -p:Version=${{ steps.version.outputs.number }}

      - name: Publish Linux
        run: dotnet publish ${{ needs.init.outputs.app-project }} --configuration Release --runtime linux-x64 --self-contained true --output ./publish/linux-x64 -p:Version=${{ steps.version.outputs.number }}

      - name: Create archives
        run: |
          cd publish/win-x64
          zip -r ../../rad-log-viewer-${{ github.event.inputs.version }}-win-x64.zip .
          cd ../linux-x64
          tar -czf ../../rad-log-viewer-${{ github.event.inputs.version }}-linux-x64.tar.gz .

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          artifacts: |
            rad-log-viewer-${{ github.event.inputs.version }}-win-x64.zip
            rad-log-viewer-${{ github.event.inputs.version }}-linux-x64.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
